{% extends "googlebenchmark.jinja" %}
{% block includes %}
{{ super() }}

#include <algorithm>
#include <execution>
#include <numeric>
{% endblock %}

{% block benhcmark_function %}
{{ super () }}
  {% block setup %}
  {{ src_container }}<{{T}}> src_container({{ size }});
  {{ dst_container }}<{{T}}> dst_container; 

  {% endblock %}
  {% block init_container %}
  {{ super () }}
  std::iota(from_container.begin(), from_container.end(), 0);
  std::random_device rd;
  std::mt19937 gen(rd());
  std::uniform_int_distribution<> dist(1, 100);
  std::generate(src_container.begin(), src_container.end(), [dist]{return dist(gen);});

  {% endblock %}

  {% block benchmark %}
    auto result = std::{{ name }}(std::execution::{{ policy }}, src_container.begin(), src_container.end(), std::back_inserter(dst_container));
    benchmark::DoNotOptimize(result);
  {% endblock %}

{% endblock %}
