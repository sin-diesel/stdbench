{% extends "googlebenchmark.jinja" %}
{% block includes %}
{{ super() }}

#include <algorithm>
#include <execution>
#include <numeric>
#include <iostream>
{% endblock %}

{% block benhcmark_function %}
{{ super () }}
  {% block setup %}
  size_t size = 0;
  std::cin >> size;
  {{ container }}<{{type}}> src_container(size);
  std::cin
  {% block init_container %}
    {{ super () }}
    std::iota(src_container.begin(), src_container.end(), 0);
    {% endblock %}
  {% endblock %}

  {% block benchmark %}
  auto result = std::{{ name }}(std::execution::{{ policy }}, src_container.begin(), src_container.end(), {{ func }});
  benchmark::DoNotOptimize(result);
  {% endblock %}

{% endblock %}
